## 목적
이 리포지토리는 Docker 기반의 MySQL 및 MariaDB 개발 환경을 제공합니다. 한 번에 하나의 DB만 실행하며, 각 DB는 완전히 분리된 데이터 볼륨을 사용합니다. 이 규칙은 Cursor에서 코드/설정/명령을 제안할 때 안전하고 일관되게 동작하도록 돕습니다.

## 서비스 구성
- **MySQL (service: `mysql`)**: 이미지 `mysql:8.0`, 포트 `3306`, 볼륨 `mysql_data_volume`, 설정 디렉터리 `mysql-config/`
- **MariaDB (service: `mariadb`)**: 이미지 `mariadb:10.11`, 포트 `3306`, 볼륨 `mariadb_data_volume`, 설정 디렉터리 `mariadb-config/`
- **phpMyAdmin (service: `phpmyadmin`)**: 포트 `8080:80`, 환경변수 `PMA_HOST=host.docker.internal`, `PMA_PORT=3306`
- **네트워크**: `database_network`

## 파일 책임
- `docker-compose.yml`: 서비스 정의(포트, 볼륨, healthcheck, 네트워크). 컨테이너 내부 포트 3306 고정, 외부 매핑만 변경.
- `db_manager.sh`: 시작/중지/전환/백업/복원/로그/상태 등 오케스트레이션. macOS `zsh`, `docker-compose` 사용 가정.
- `mysql-config/my.cnf`, `mariadb-config/my.cnf`: DB별 설정. 문자셋 `utf8mb4`, 포트 3306, 성능/로그 옵션 포함.
- `mysql-init/`, `mariadb-init/`: 초기화 SQL 스크립트(존재 시 사용).
- `README.md`: 사용법과 자주 쓰는 명령 요약.

## 실행/개발 가이드
- 스크립트 사용을 우선:
  - `./db-manager.sh start mysql` 또는 `./db-manager.sh start mariadb`
  - 전환: `./db-manager.sh switch mariadb` (상호 배타. 기존 DB 자동 중지)
  - 상태/로그: `./db-manager.sh status`, `./db-manager.sh logs [mysql|mariadb]`
  - 접속: `./db-manager.sh connect auto`
  - 백업/복원: `./db-manager.sh backup auto`, `./db-manager.sh restore [mysql|mariadb] <file>`
- 직접 compose 호출은 예외적으로만: `docker-compose up -d mysql` 등.
- 포트 충돌 시 외부 매핑만 수정(예: `3307:3306`). 컨테이너 내부 포트 3306은 유지.

## 안전 원칙 (Do / Don't)
- Do
  - 절대 경로 선호(예: `/Users/minseok/docker-databases`).
  - 한 번에 하나의 DB만 실행되도록 보장. 전환 시 기존 DB 중지.
  - 서비스명은 `mysql`, `mariadb`, `phpmyadmin`으로 참조.
  - 설정 변경 시 `*-config/` 디렉터리를 사용하고, 스크립트로 재시작.
  - 데이터 조작은 스크립트의 백업/복원 기능을 우선 사용.
- Don't
  - `mysql`과 `mariadb`를 동시에 실행하지 않기.
  - 컨테이너 내부 포트 3306을 변경하지 않기.
  - 민감 정보(비밀번호 등)를 하드코딩/커밋하지 않기.
  - `clean`처럼 상호작용 프롬프트가 필요한 명령을 무인 파이프라인에서 강제 실행하지 않기.

## 변경 지침
- `docker-compose.yml` 편집 시:
  - 들여쓰기/포맷 유지. 불필요한 재정렬 금지.
  - 포트 매핑 변경 시 phpMyAdmin의 `PMA_HOST/PORT`가 호스트를 바라본다는 점 고려.
  - 새로운 DB 변형 추가 시 별도 서비스/볼륨/동일 네트워크 사용.
- `db_manager.sh` 편집 시:
  - 기존 함수 계약(입력/출력/색상 ANSI 코드) 유지.
  - `docker-compose` 호출 스타일 일관성 유지. 필요 시 대기/healthcheck 존중.
  - 대화형 입력이 필요한 명령에는 임의 플래그 추가 금지.
- 설정 파일(`my.cnf`) 편집 시:
  - 공통 문자셋 `utf8mb4` 유지.
  - 내부 포트 3306 고정.

## 작업 템플릿
- MySQL로 전환: `./db-manager.sh switch mysql`
- MariaDB로 전환: `./db-manager.sh switch mariadb`
- 포트 충돌(호스트 3307 사용): `docker-compose.yml`에서 `"3307:3306"`으로 수정 후 재시작
- 초기화 SQL 추가: `mysql-init/*.sql` 또는 `mariadb-init/*.sql`에 파일 추가 후 재시작
- 볼륨 경로 확인: `./db-manager.sh volumes`

## 품질 체크
- 변경 후:
  - `./db-manager.sh check`
  - `./db-manager.sh start mysql` (또는 mariadb)
  - `./db-manager.sh status`로 실행 및 포트/health 확인
  - 필요 시 `./db-manager.sh logs`

## 환경 전제
- OS: macOS (darwin 24.x), Shell: `/bin/zsh`
- Compose: `docker-compose` 사용(플러그인 `docker compose`와 혼용하지 않음)
- 워크스페이스 루트: `/Users/minseok/docker-databases`

## 커밋 메시지 예
- `chore(compose): map mysql host port to 3307 to avoid conflict`

